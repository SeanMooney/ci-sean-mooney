Upload logs to MinIO (S3-compatible)

This is a custom version of the upload-logs-s3 role specifically for MinIO.
The main difference is that no_log has been removed to allow debugging.

This role requires the ``boto3`` Python package to be
installed in the Ansible environment on the Zuul executor.

**Role Variables**

.. zuul:rolevar:: zuul_site_upload_logs
   :default: true

   Controls when logs are uploaded. true, the default, means always
   upload logs. false means never upload logs. 'failure' means to only
   upload logs when the job has failed.

.. zuul:rolevar:: zuul_log_partition
   :default: false

   If set to true, then the first component of the log path will be
   removed from the object name and added to the bucket name.

.. zuul:rolevar:: zuul_log_bucket

   The name of the MinIO bucket which will be used.

.. zuul:rolevar:: zuul_log_bucket_public
   :default: true

   Set to false to make logs private.

.. zuul:rolevar:: zuul_log_path
   :default: Generated by the role `set-zuul-log-path-fact`

   Prepend this path to the object names when uploading.

.. zuul:rolevar:: zuul_log_create_indexes
   :default: true

   Whether to create `index.html` files with directory indexes.

.. zuul:rolevar:: upload_logs_s3_endpoint

   The MinIO endpoint URL.

.. zuul:rolevar:: zuul_log_aws_access_key

   MinIO access key to use.

.. zuul:rolevar:: zuul_log_aws_secret_key

   MinIO secret key for the access key.
