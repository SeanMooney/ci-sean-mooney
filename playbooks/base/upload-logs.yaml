---
- hosts: all
  vars:
    zuul_output_dir: "{{ ansible_user_dir }}/zuul-output"
  tasks:
    - name: Stage output from all nodes
      include_role:
        name: stage-output
    
    - name: Set log path for multiple nodes
      set_fact:
        log_path: "{{ zuul.executor.log_root }}/{{ inventory_hostname }}"
      when: groups['all'] | length > 1

    - name: Set log path for single node
      set_fact:
        log_path: "{{ zuul.executor.log_root }}"
      when: log_path is not defined
    
    - name: Ensure local output dirs
      delegate_to: localhost
      file:
        path: "{{ zj_output_dir }}"
        state: directory
        mode: 0755
      with_items:
        - "{{ log_path | default(zuul.executor.log_root) }}"
        - "{{ zuul.executor.work_root }}/artifacts"
        - "{{ zuul.executor.work_root }}/docs"
      loop_control:
        loop_var: zj_output_dir
    
    - name: Find logs files
      find:
        paths: "{{ zuul_output_dir }}/logs"
        file_type: file
        recurse: yes
      register: found_logs

    - name: Fetch logs to executor
      fetch:
        src: "{{ item.path }}"
        dest: "{{ log_path | default(zuul.executor.log_root) }}/{{ item.path | regex_replace('^' + (zuul_output_dir + '/logs/'), '') }}"
        flat: yes
      loop: "{{ found_logs.files }}"

    - name: Find artifacts files
      find:
        paths: "{{ zuul_output_dir }}/artifacts"
        file_type: file
        recurse: yes
      register: found_artifacts

    - name: Fetch artifacts to executor
      fetch:
        src: "{{ item.path }}"
        dest: "{{ zuul.executor.work_root }}/artifacts/{{ item.path | regex_replace('^' + (zuul_output_dir + '/artifacts/'), '') }}"
        flat: yes
      loop: "{{ found_artifacts.files }}"

    - name: Find docs files
      find:
        paths: "{{ zuul_output_dir }}/docs"
        file_type: file
        recurse: yes
      register: found_docs

    - name: Fetch docs to executor
      fetch:
        src: "{{ item.path }}"
        dest: "{{ zuul.executor.work_root }}/docs/{{ item.path | regex_replace('^' + (zuul_output_dir + '/docs/'), '') }}"
        flat: yes
      loop: "{{ found_docs.files }}"

- hosts: localhost
  tasks:
    - name: Include Zuul manifest role
      include_role:
        name: generate-zuul-manifest
    - name: Generate bulk log download script
      include_role:
        name: local-log-download
      vars:
        local_log_download_api: 'https://zuul.teim.app/api/tenant/{{ zuul.tenant }}'
    - name: Upload logs to MinIO
      include_role:
        name: upload-logs-minio
      vars:
        upload_logs_s3_endpoint: "{{ zuul_log_targets.upload_logs_s3_endpoint }}"
        zuul_log_bucket: "{{ zuul_log_targets.zuul_log_bucket }}"
        zuul_log_aws_access_key: "{{ zuul_log_targets.zuul_log_aws_access_key }}"
        zuul_log_aws_secret_key: "{{ zuul_log_targets.zuul_log_aws_secret_key }}"
        zuul_log_create_indexes: "{{ zuul_log_targets.zuul_log_create_indexes | default(true) }}"
        zuul_log_bucket_public: "{{ zuul_log_targets.zuul_log_bucket_public | default(true) }}"
        upload_logs_s3_addressing_style: "{{ zuul_log_targets.upload_logs_s3_addressing_style | default('path') }}"
    # NOTE(ianw): file generated by local-log-download, upload_results
    # is registered by the upload-logs-swift role
    - name: Register quick-download link
      zuul_return:
        data:
          zuul:
            artifacts:
              - name: Download all logs
                url: 'download-logs.sh'
                metadata:
                  command: 'curl "{{ upload_results.url }}/download-logs.sh" | bash'
